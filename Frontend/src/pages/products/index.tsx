import { useEffect, useState } from 'react';

import Head from 'next/head';

import ProductCard from '@components/__Common/ProductCard';
import Footer from '@components/__Layout/Footer';
import ProductsWrapper from '@components/__Wrappers/ProductsWrapper';
import { initializeStore } from '@store/store';
import { useStyles } from '@styles/Home';
import { Products } from '@types';

interface IAreThereMoreProducts {
  text: string;
}
function AreThereMoreProducts({ text }:IAreThereMoreProducts) {
  return (
    <div style={{
      background: 'red',
      color: 'white',
      position: 'fixed',
      bottom: 30,
      right: 'auto',
      borderRadius: 10,
      fontSize: 18,
      padding: 10,
    }}>{text}</div>
  );
}

function Home() {
  const [products, setProducts] = useState<Products>([]);

  // Check if there are more products to display
  const [hasMoreProducts, setHasMoreProducts] = useState(true);
  const { classes } = useStyles();
  const [page, setPage] = useState(1);

  const fetchProducts = (page) => {
    fetch(`http://localhost:5000/api/products?_page=${page}&_limit=3`)
      .then((res) => res.json())
      .then((newProducts) => {
        setProducts((prevProducts) => [...prevProducts, ...newProducts]);

        // If the number of new products is less than the limit, there are no more products to fetch
        if (newProducts.length < 3) {
          setHasMoreProducts(false);
        }
      });
  };

  useEffect(() => {
    fetchProducts(page);
  }, [page]);

  const gap = 15;

  return (
    <div className={classes.root}>
      <Head>
        <title>Store - App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/icons/favicon.ico" />
        <link rel="canonical" href="http://localhost:3000/" />
      </Head>
      <ProductsWrapper gap={gap}>
        {products.map((product, index) => {
          return <ProductCard key={product.id} product={product} index={index} gap={gap}/>;
        })}
      </ProductsWrapper>
      <button type="button" onClick={() => setPage((prevPage) => prevPage + 1)} disabled={!hasMoreProducts}>
        Load More
      </button>
      {!hasMoreProducts ? <AreThereMoreProducts text="All the products are displayed"/> : null}

      <Footer />
    </div>
  );
}

export default Home;

export function getStaticProps() {
  const zustandStore = initializeStore();

  return { props: { initialZustandState: JSON.parse(JSON.stringify(zustandStore.getState())) } };
}
